{
  "manifestVersion": "3.1",
  "impls": {
    "7218b747d5dc548c10c4c0f2360059b16fd08e2fad453529d458f66a75ddedb0": {
      "address": "0x2CF332a112C9aD46943FF783D761cefFad2E09f3",
      "txHash": "0xc4f7120167cd1ce78140aa4d8976f49d381dbdb8de42061064bbd7251840f1b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:22"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:96"
          },
          {
            "contract": "MetaTxGateway",
            "label": "domainSeperatorL1",
            "type": "t_bytes32",
            "src": "src/MetaTxGateway.sol:55"
          },
          {
            "contract": "MetaTxGateway",
            "label": "domainSeperatorL2",
            "type": "t_bytes32",
            "src": "src/MetaTxGateway.sol:56"
          },
          {
            "contract": "MetaTxGateway",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "src/MetaTxGateway.sol:57"
          },
          {
            "contract": "MetaTxGateway",
            "label": "whitelistMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "src/MetaTxGateway.sol:60"
          },
          {
            "contract": "MetaTxGateway",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/MetaTxGateway.sol:76"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fb923153ea891c8ac19404660720736a7742477303b5e99111b9c9bf764a117e": {
      "address": "0x2069fA2972B597C4d3cc3CF581c3551B444118A0",
      "txHash": "0xbb67118fa0f3027a56cac510665cce83d809574c70ea153c93d1e2350235cf22",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:22"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:96"
          },
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "src/utils/DecimalERC20.sol:13"
          },
          {
            "contract": "BaseBridge",
            "label": "ambBridge",
            "type": "t_contract(IAMB)15867",
            "src": "src/bridge/BaseBridge.sol:28"
          },
          {
            "contract": "BaseBridge",
            "label": "multiTokenMediator",
            "type": "t_contract(IMultiTokenMediator)15879",
            "src": "src/bridge/BaseBridge.sol:31"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:17"
          },
          {
            "contract": "ClientBridge",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "src/bridge/xDai/ClientBridge.sol:16"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IAMB)15867": {
            "label": "contract IAMB"
          },
          "t_contract(IMultiTokenMediator)15879": {
            "label": "contract IMultiTokenMediator"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a535669c9c4ea8e5151fdd2f6d3d5c4e60cf7c69482098afe10ac5220c81b81f": {
      "address": "0xC82A014Fe85c25E4491b060cb11f0A30E296abd2",
      "txHash": "0x0ebc82c10fe0935ac16f5d58cdb0b7159f5a9aadcaed8c5f3133142f443f25ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:22"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:96"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:15"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "src/utils/DecimalERC20.sol:13"
          },
          {
            "contract": "InsuranceFund",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "src/InsuranceFund.sol:35"
          },
          {
            "contract": "InsuranceFund",
            "label": "quoteTokenMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "src/InsuranceFund.sol:36"
          },
          {
            "contract": "InsuranceFund",
            "label": "amms",
            "type": "t_array(t_contract(IAmm)18007)dyn_storage",
            "src": "src/InsuranceFund.sol:37"
          },
          {
            "contract": "InsuranceFund",
            "label": "quoteTokens",
            "type": "t_array(t_contract(IERC20)3402)dyn_storage",
            "src": "src/InsuranceFund.sol:38"
          },
          {
            "contract": "InsuranceFund",
            "label": "exchange",
            "type": "t_contract(IExchangeWrapper)18076",
            "src": "src/InsuranceFund.sol:41"
          },
          {
            "contract": "InsuranceFund",
            "label": "perpToken",
            "type": "t_contract(IERC20)3402",
            "src": "src/InsuranceFund.sol:42"
          },
          {
            "contract": "InsuranceFund",
            "label": "minter",
            "type": "t_contract(IMinter)18143",
            "src": "src/InsuranceFund.sol:43"
          },
          {
            "contract": "InsuranceFund",
            "label": "inflationMonitor",
            "type": "t_contract(IInflationMonitor)18092",
            "src": "src/InsuranceFund.sol:44"
          },
          {
            "contract": "InsuranceFund",
            "label": "beneficiary",
            "type": "t_address",
            "src": "src/InsuranceFund.sol:45"
          },
          {
            "contract": "InsuranceFund",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/InsuranceFund.sol:61"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_contract(IAmm)18007)dyn_storage": {
            "label": "contract IAmm[]"
          },
          "t_array(t_contract(IERC20)3402)dyn_storage": {
            "label": "contract IERC20[]"
          },
          "t_contract(IExchangeWrapper)18076": {
            "label": "contract IExchangeWrapper"
          },
          "t_contract(IERC20)3402": {
            "label": "contract IERC20"
          },
          "t_contract(IMinter)18143": {
            "label": "contract IMinter"
          },
          "t_contract(IInflationMonitor)18092": {
            "label": "contract IInflationMonitor"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "6f93df95a744e1175ecf4398a0c017039198e179db1f9e68796e19e34424f149": {
      "address": "0x69DD7ED3f806e6702C75e6309B956baa235CCc31",
      "txHash": "0xd1b0af1c684618d6227218caffa50db81cc8602a659ac1da0833e141bb3c4d45",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:22"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:96"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:15"
          },
          {
            "contract": "L2PriceFeed",
            "label": "ambBridge",
            "type": "t_address",
            "src": "src/L2PriceFeed.sol:35"
          },
          {
            "contract": "L2PriceFeed",
            "label": "rootBridge",
            "type": "t_address",
            "src": "src/L2PriceFeed.sol:36"
          },
          {
            "contract": "L2PriceFeed",
            "label": "priceFeedMap",
            "type": "t_mapping(t_bytes32,t_struct(PriceFeed)11993_storage)",
            "src": "src/L2PriceFeed.sol:39"
          },
          {
            "contract": "L2PriceFeed",
            "label": "priceFeedKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "src/L2PriceFeed.sol:40"
          },
          {
            "contract": "L2PriceFeed",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/L2PriceFeed.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(PriceFeed)11993_storage)": {
            "label": "mapping(bytes32 => struct L2PriceFeed.PriceFeed)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a23f2000f9b13a743dd3deedd547d45eaedfe0ce987a61da4614a9ee36eed0e5": {
      "address": "0xF78Af789543D80C61A0FA03b6E8AFdB1B7270ae4",
      "txHash": "0xc014bacecb22e7369bf73b65bcdb89972957cb8fbf3d7e916485f0efb88c7fd2",
      "layout": {
        "storage": [
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "src/utils/DecimalERC20.sol:13"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:22"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:96"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "OwnerPausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "src/OwnerPausable.sol:23"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:15"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:17"
          },
          {
            "contract": "ClearingHouse",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "src/ClearingHouse.sol:157"
          },
          {
            "contract": "ClearingHouse",
            "label": "initMarginRatio",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/ClearingHouse.sol:160"
          },
          {
            "contract": "ClearingHouse",
            "label": "maintenanceMarginRatio",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/ClearingHouse.sol:163"
          },
          {
            "contract": "ClearingHouse",
            "label": "liquidationFeeRatio",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/ClearingHouse.sol:166"
          },
          {
            "contract": "ClearingHouse",
            "label": "openInterestNotionalMap",
            "type": "t_mapping(t_address,t_struct(decimal)22620_storage)",
            "src": "src/ClearingHouse.sol:170"
          },
          {
            "contract": "ClearingHouse",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_struct(AmmMap)7135_storage)",
            "src": "src/ClearingHouse.sol:173"
          },
          {
            "contract": "ClearingHouse",
            "label": "prepaidBadDebt",
            "type": "t_mapping(t_address,t_struct(decimal)22620_storage)",
            "src": "src/ClearingHouse.sol:176"
          },
          {
            "contract": "ClearingHouse",
            "label": "insuranceFund",
            "type": "t_contract(IInsuranceFund)18122",
            "src": "src/ClearingHouse.sol:179"
          },
          {
            "contract": "ClearingHouse",
            "label": "feePool",
            "type": "t_contract(IMultiTokenRewardRecipient)18158",
            "src": "src/ClearingHouse.sol:180"
          },
          {
            "contract": "ClearingHouse",
            "label": "whitelist",
            "type": "t_address",
            "src": "src/ClearingHouse.sol:183"
          },
          {
            "contract": "ClearingHouse",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/ClearingHouse.sol:198"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(decimal)22620_storage": {
            "label": "struct Decimal.decimal"
          },
          "t_mapping(t_address,t_struct(decimal)22620_storage)": {
            "label": "mapping(address => struct Decimal.decimal)"
          },
          "t_mapping(t_address,t_struct(AmmMap)7135_storage)": {
            "label": "mapping(address => struct ClearingHouse.AmmMap)"
          },
          "t_contract(IInsuranceFund)18122": {
            "label": "contract IInsuranceFund"
          },
          "t_contract(IMultiTokenRewardRecipient)18158": {
            "label": "contract IMultiTokenRewardRecipient"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          }
        }
      }
    },
    "753b232316b859f11f333f773abc9f96988f80e4734d594b7bf3811b481d3fd5": {
      "address": "0xcD9f14f4076bc07e660761316e08c2718882eB12",
      "txHash": "0x1b0be8ffa6ff8137bbbc24f7e92b878d0661177ae1f615f2fc14e6d041063de9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:22"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:96"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:15"
          },
          {
            "contract": "Amm",
            "label": "baseAssetDeltaThisFundingPeriod",
            "type": "t_struct(signedDecimal)24228_storage",
            "src": "src/Amm.sol:85"
          },
          {
            "contract": "Amm",
            "label": "totalPositionSize",
            "type": "t_struct(signedDecimal)24228_storage",
            "src": "src/Amm.sol:88"
          },
          {
            "contract": "Amm",
            "label": "fundingRate",
            "type": "t_struct(signedDecimal)24228_storage",
            "src": "src/Amm.sol:91"
          },
          {
            "contract": "Amm",
            "label": "cumulativeNotional",
            "type": "t_struct(signedDecimal)24228_storage",
            "src": "src/Amm.sol:93"
          },
          {
            "contract": "Amm",
            "label": "settlementPrice",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/Amm.sol:95"
          },
          {
            "contract": "Amm",
            "label": "tradeLimitRatio",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/Amm.sol:96"
          },
          {
            "contract": "Amm",
            "label": "quoteAssetReserve",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/Amm.sol:97"
          },
          {
            "contract": "Amm",
            "label": "baseAssetReserve",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/Amm.sol:98"
          },
          {
            "contract": "Amm",
            "label": "fluctuationLimitRatio",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/Amm.sol:99"
          },
          {
            "contract": "Amm",
            "label": "tollRatio",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/Amm.sol:102"
          },
          {
            "contract": "Amm",
            "label": "spreadRatio",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/Amm.sol:103"
          },
          {
            "contract": "Amm",
            "label": "tollAmount",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/Amm.sol:104"
          },
          {
            "contract": "Amm",
            "label": "maxHoldingBaseAsset",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/Amm.sol:105"
          },
          {
            "contract": "Amm",
            "label": "openInterestNotionalCap",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/Amm.sol:106"
          },
          {
            "contract": "Amm",
            "label": "cumulativePositionMultiplier",
            "type": "t_struct(decimal)22620_storage",
            "src": "src/Amm.sol:109"
          },
          {
            "contract": "Amm",
            "label": "liquidityChangedSnapshots",
            "type": "t_array(t_struct(LiquidityChangedSnapshot)17831_storage)dyn_storage",
            "src": "src/Amm.sol:112"
          },
          {
            "contract": "Amm",
            "label": "spotPriceTwapInterval",
            "type": "t_uint256",
            "src": "src/Amm.sol:114"
          },
          {
            "contract": "Amm",
            "label": "fundingPeriod",
            "type": "t_uint256",
            "src": "src/Amm.sol:115"
          },
          {
            "contract": "Amm",
            "label": "fundingBufferPeriod",
            "type": "t_uint256",
            "src": "src/Amm.sol:116"
          },
          {
            "contract": "Amm",
            "label": "nextFundingTime",
            "type": "t_uint256",
            "src": "src/Amm.sol:117"
          },
          {
            "contract": "Amm",
            "label": "priceFeedKey",
            "type": "t_bytes32",
            "src": "src/Amm.sol:118"
          },
          {
            "contract": "Amm",
            "label": "reserveSnapshots",
            "type": "t_array(t_struct(ReserveSnapshot)4134_storage)dyn_storage",
            "src": "src/Amm.sol:119"
          },
          {
            "contract": "Amm",
            "label": "counterParty",
            "type": "t_address",
            "src": "src/Amm.sol:121"
          },
          {
            "contract": "Amm",
            "label": "globalShutdown",
            "type": "t_address",
            "src": "src/Amm.sol:122"
          },
          {
            "contract": "Amm",
            "label": "quoteAsset",
            "type": "t_contract(IERC20)3402",
            "src": "src/Amm.sol:123"
          },
          {
            "contract": "Amm",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)18213",
            "src": "src/Amm.sol:124"
          },
          {
            "contract": "Amm",
            "label": "open",
            "type": "t_bool",
            "src": "src/Amm.sol:125"
          },
          {
            "contract": "Amm",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/Amm.sol:140"
          }
        ],
        "types": {
          "t_struct(signedDecimal)24228_storage": {
            "label": "struct SignedDecimal.signedDecimal"
          },
          "t_struct(decimal)22620_storage": {
            "label": "struct Decimal.decimal"
          },
          "t_array(t_struct(LiquidityChangedSnapshot)17831_storage)dyn_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(ReserveSnapshot)4134_storage)dyn_storage": {
            "label": "struct Amm.ReserveSnapshot[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)3402": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceFeed)18213": {
            "label": "contract IPriceFeed"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xCF2824225Ef0c6799C78E18305A8654c9f70D5aa",
    "txHash": "0xa387b0a29fefd385a95356a22d05648992f9cf3a6da8d7c7b5e141cd9b17cd44"
  }
}
